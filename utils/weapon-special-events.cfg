#textdomain wesnoth-A_Song_of_the_Winds

# Macro taken from Legend of the Invincibles
#define INCORPORATE_EFFECTS
    {VARIABLE damage $damage_inflicted}
    {VARIABLE_OP damage multiply 100}
    [set_variable]
        name=resistance
        to_variable=second_unit.resistance.$weapon.type
    [/set_variable]
    [if]
        [variable]
            name=resistance
            greater_than=0
        [/variable]
        [else]
            {VARIABLE resistance 100}
        [/else]
    [/if]
    {VARIABLE_OP damage divide $resistance}
    {CLEAR_VARIABLE resistance}
#enddef

# The following 6 macros were taken from IftU and AtS

#define VARIABLE_BOOLEAN_EQUALS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        boolean_equals={RVALUE}
    [/variable]
#enddef

#define VARIABLE_INCREMENT VAR_ID
    [set_variable]
        name={VAR_ID}
        add=1
    [/set_variable]
#enddef

#define VARIABLE_INC VAR_ID
    {VARIABLE_INCREMENT {VAR_ID} }
#enddef

#define VARIABLE_NUM_GREATER_OR_EQUAL_THAN VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        greater_than_equal_to={RVALUE}
    [/variable]
#enddef

#define VARIABLE_MINUS VAR_ID RVALUE
    [set_variable]
        name={VAR_ID}
        sub={RVALUE}
    [/set_variable]
#enddef

#define VARIABLE_MIN VAR_ID RVALUE
    {VARIABLE_MINUS {VAR_ID} {RVALUE} }
#enddef

###################################################################### WEAPON SPECIALS EVENTS ################################################################

#define WEAPON_SPECIALS_EVENTS

    # Event for Explosive weapon special

    [event]
        name=attacker_hits
        first_time_only=no

        [filter_attack]
            special=explosive
        [/filter_attack]
        {INCORPORATE_EFFECTS}
        [harm_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x2,$y2
                [/filter_adjacent]
                [not]
                    x,y=$x2,$y2,$x1,$y1
                [/not]
                [enemy_of]
                    side=$x1,$y1
                [/enemy_of]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=$($($damage*3)/4-4)
            damage_type=$weapon.type
            fire_event=yes
            experience=no
        [/harm_unit]
        [if]
            [variable]
                name=damage
                greater_than=24	# If the damage is high enough, the range is increased.
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        [filter_location]
                            # Exclude the units that just received the damage.
                            [not]
                                x,y=$x2,$y2
                                radius=1
                            [/not]
                            # Include the remaining units within two hexes.
                            [and]
                                x,y=$x2,$y2
                                radius=2
                                # The blaze cannot go through walls.
                                [filter_radius]
                                    terrain=!,X*,X*^*,*^X*
                                [/filter_radius]
                            [/and]
                        [/filter_location]
                        [enemy_of]
                            side=$x1,$y1
                        [/enemy_of]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]

                    amount=$($($damage*3)/4-18)
                    damage_type=$weapon.type
                    fire_event=yes
                    experience=no
                    animate=no
                [/harm_unit]
            [/then]
        [/if]
        [if]
            [variable]
                name=damage
                greater_than=48		# If the damage is extremely high, the range is increased even more.
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        [filter_location]
                            # Exclude the units that just received the damage.
                            [not]
                                x,y=$x2,$y2
                                radius=2
                            [/not]
                            # Include the remaining units within two hexes.
                            [and]
                                x,y=$x2,$y2
                                radius=3
                                # The blaze cannot go through walls.
                                [filter_radius]
                                    terrain=!,X*,X*^*,*^X*
                                [/filter_radius]
                            [/and]
                        [/filter_location]
                        [enemy_of]
                            side=$x1,$y1
                        [/enemy_of]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]

                    amount=$($($damage)/2-24)
                    damage_type=$weapon.type
                    fire_event=yes
                    experience=no
                    animate=no
                [/harm_unit]
            [/then]
        [/if]
        [if]
            [variable]
                name=damage
                greater_than=108		# If the damage is higher than most common attacks can get, the range is increased even even more.
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        [filter_location]
                            # Exclude the units that just received the damage.
                            [not]
                                x,y=$x2,$y2
                                radius=3
                            [/not]
                            # Include the remaining units within two hexes.
                            [and]
                                x,y=$x2,$y2
                                radius=4s
                                # The blaze cannot go through walls.
                                [filter_radius]
                                    terrain=!,X*,X*^*,*^X*
                                [/filter_radius]
                            [/and]
                        [/filter_location]
                        [enemy_of]
                            side=$x1,$y1
                        [/enemy_of]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]

                    amount=$($($damage)/3-36)
                    damage_type=$weapon.type
                    fire_event=yes
                    experience=no
                    animate=no
                [/harm_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE damage}
    [/event]

    # Event for the Life Consumer special

    # event that creates a "life consumer has worked" variable
    # and sets it to "yes" if the attacker hits at least once.
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special=weapon_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=unit_att_with_life_consumer
            mode=append
        [/store_unit]
        [set_variable]
            name=unit_att_with_life_consumer.variables.life_consumer_has_worked
            value=yes
        [/set_variable]
        [unstore_unit]
            variable=unit_att_with_life_consumer
        [/unstore_unit]
        {CLEAR_VARIABLE unit_att_with_life_consumer}
    [/event]
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special=weapon_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=life_consumer
            mode=append
        [/store_unit]

        [if]
            [variable]
                name=life_consumer.variables.life_consumer_has_worked
                equals=yes
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    amount=16
                    kill=yes
                    fire_event=yes
                    animate=yes
                [/harm_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE life_consumer}
    [/event]

    # Event for the Lesser Life Consumer special

    # event that creates a "lesser life consumer has worked" variable
    # and sets it to "yes" if the attacker hits at least once.
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special=weapon_lesser_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=unit_att_with_lesser_life_consumer
            mode=append
        [/store_unit]
        [set_variable]
            name=unit_att_with_lesser_life_consumer.variables.lesser_life_consumer_has_worked
            value=yes
        [/set_variable]
        [unstore_unit]
            variable=unit_att_with_lesser_life_consumer
        [/unstore_unit]
        {CLEAR_VARIABLE unit_att_with_lesser_life_consumer}
    [/event]
    [event]
        name=attack end
        first_time_only=no
        [filter_attack]
            special=weapon_lesser_life_consumer
        [/filter_attack]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=lesser_life_consumer
            mode=append
        [/store_unit]

        [if]
            [variable]
                name=lesser_life_consumer.variables.lesser_life_consumer_has_worked
                equals=yes
            [/variable]
            [then]
                [harm_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    amount=8
                    kill=no
                    animate=yes
                    fire_event=yes
                [/harm_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE lesser_life_consumer}
    [/event]

    # Event for the Whirlwind special

    [event]
        name=attacker_hits
        first_time_only=no
        [filter_attack]
            special=whirlwind
        [/filter_attack]
        {VARIABLE has_drain 0}      # Notifies the weapon specials
        {VARIABLE has_slow no}
        {VARIABLE has_poison no}
        {FOREACH weapon.specials.damage i}
            [if]
                [variable]
                    name=weapon.specials.drains.id
                    equals=drains
                [/variable]
                [then]
                    {VARIABLE has_drain 1}
                [/then]
            [/if]
        {NEXT i}
        [if]
            [variable]
                name=weapon.specials.poison.id
                equals=poison
            [/variable]
            [then]
                {VARIABLE has_poison yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=weapon.specials.slow.id
                equals=slow
            [/variable]
            [then]
                {VARIABLE has_slow yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=has_drain
                equals=0
            [/variable]
            [else]
                [store_unit]      #We need to know how many units were drained, and what were their resistances
                    [filter]
                        [filter_adjacent]
                            x,y=$x1,$y1
                        [/filter_adjacent]
                        [not]
                            side=$unit.side              #If you want to use it in an era, use side=$unit.side instead
                        [/not]
                        [not]         #The target unit is already hit by the attack
                            x,y=$x2,$y2
                        [/not]
                        [not]          #Undead are undrainable
                            race=undead
                        [/not]
                    [/filter]
                    variable=units
                [/store_unit]
                {VARIABLE healed_amount 0}
                {FOREACH units i}
                    [switch]            #Check the resistances
                        variable=weapon.type
                        [case]
                            value=arcane
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.arcane*$weapon.damage)"}
                        [/case]
                        [case]
                            value=fire
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.fire*$weapon.damage)"}
                        [/case]
                        [case]
                            value=cold
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.cold*$weapon.damage)"}
                        [/case]
                        [case]
                            value=blade
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.blade*$weapon.damage)"}
                        [/case]
                        [case]
                            value=pierce
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.pierce*$weapon.damage)"}
                        [/case]
                        [case]
                            value=impact
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.impact*$weapon.damage)"}
                        [/case]
                    [/switch]
                {NEXT i}
                [store_unit]        #Float the healed amount over the unit, like if it had drained
                    [filter]    #Two numbers will float, the one from the regular hit and one from this
                        x,y=$x1,$y1
                    [/filter]
                    kill=no
                    variable=FLOATING_TEXT_temp
                [/store_unit]
                [unstore_unit]
                    variable=FLOATING_TEXT_temp
                    find_vacant=no
                    red,green,blue=0,255,0
                    text=$($healed_amount/200)         #Operating with huge numbers because rounding is a problem
                [/unstore_unit]
                {CLEAR_VARIABLE FLOATING_TEXT_temp}
                [heal_unit]
                    [filter]
                        x,y=$x1,&y1
                    [/filter]
                    amount=$($healed_amount/200)
                    animate=no
                [/heal_unit]
                {CLEAR_VARIABLE units}
                {CLEAR_VARIABLE healed_amount}
            [/else]
        [/if]
        [harm_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                [not]
                    side=$unit.side             #If you want to use it in an era, use side=$unit.side instead
                [/not]
                [not]             #If you want to use it in an era, use side=$unit.side instead
                    x,y=$x2,$y2
                [/not]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=$weapon.damage
            damage_type=$weapon.type
            fire_event=yes
            experience=no
            poisoned=$has_poison   #We have detected these two effects before
            slowed=$has_slow
        [/harm_unit]
        {CLEAR_VARIABLE has_slow}
        {CLEAR_VARIABLE has_poison}
        {CLEAR_VARIABLE has_drain}
    [/event]

    # event for the Whirlwind + Great Plague special (thanks very much, Dugi and trewe ;-) )

    [event]
        id=dead_whirlwind_attacker_hits
        name=attacker_hits
        first_time_only=no

        [filter_attack]
            special=dead_whirlwind
        [/filter_attack]

        # check specials

        # add default values (note: 0/1 are not booleans)
        {VARIABLE dead_whirlwind.has_drain no}
        {VARIABLE dead_whirlwind.has_poison no}
        {VARIABLE dead_whirlwind.has_slow no}

        # check if they exist
        # NOTE this covers custom made specials too (where the id is changed)
        [if]
            {VARIABLE_CONDITIONAL weapon.specials.drains.id not_equals $empty_var}
            [then]
                {VARIABLE dead_whirlwind.has_drain yes}
            [/then]
        [/if]

        [if]
            {VARIABLE_CONDITIONAL weapon.specials.poison.id not_equals $empty_var}
            [then]
                {VARIABLE dead_whirlwind.has_poison yes}
            [/then]
        [/if]

        [if]
            {VARIABLE_CONDITIONAL weapon.specials.slow.id not_equals $empty_var}
            [then]
                {VARIABLE dead_whirlwind.has_slow yes}
            [/then]
        [/if]

        # store all surrounding enemy units
        [store_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                [not]
                    x,y=$x2,$y2
                [/not]
                [not]
                    [filter_side]
                        [allied_with]
                            side=$unit.side
                        [/allied_with]
                    [/filter_side]
                [/not]
            [/filter]
            variable=units
        [/store_unit]

        # calculate drain
        [if]
            {VARIABLE_CONDITIONAL dead_whirlwind.has_drain equals yes}
            [then]
                {FOREACH units i_temp}
                    # only units which can be drained at all
                    [if]
#ifver WESNOTH_VERSION > 1.11.0
                        {VARIABLE_CONDITIONAL $units[$i_temp].status.undrainable equals yes}
#else
                        {VARIABLE_CONDITIONAL $units[$i_temp].status.not_living equals yes}
#endif
                        [then]
                            {VARIABLE healed_amount "$($units[$i_temp].resistance.$weapon.type*$weapon.damage)"}

                            [floating_text]
                                x,y=$x1,$y1
                                text="<span color='0,255,0'>"+"$($healed_amount/200)"+"</span>"
                            [/floating_text]

                            [heal_unit]
                                [filter]
                                    x,y=$x1,$y1
                                [/filter]
                                amount="$($healed_amount/200)"
                                animate=no # this should be set to yes (and the floating text above removed)
                            [/heal_unit]
                            {CLEAR_VARIABLE healed_amount}
                        [/then]
                    [/if]
                {NEXT i_temp}
            [/then]
        [/if]

        # store time of day
        [store_time_of_day]
            variable=dead_whirlwind.tod
        [/store_time_of_day]

        # harm surrounding units
        [harm_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                [not]
                    [filter_side]
                        [allied_with]
                            side=$unit.side
                        [/allied_with]
                    [/filter_side]
                [/not]
                [not]
                    x,y=$x2,$y2
                [/not]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=$weapon.damage
            damage_type=$weapon.type
            alignment=$dead_whirlwind.tod.id
            animate=no # disabled here - it looks ugly
            fire_event=yes
            experience=no
            poisoned=$dead_whirlwind.has_poison
            slowed=$dead_whirlwind.has_slow
        [/harm_unit]

        # replace dead units with a Soulless
        # NOTE for balance purpose attacks_left and moves are set to 0 (like plaque would do)
        {FOREACH units i_temp}
            [if]
                [not]
                    [have_unit]
                        id=$units[$i_temp].id
                    [/have_unit]
                [/not]
                [not]
                    [variable]
                        name=units[$i_temp].status.not_living
                        equals=yes
                    [/variable]
                [/not]
                [then]
                    {GENERIC_UNIT $side_number Soulless $units[$i_temp].x $units[$i_temp].y}
                    [+unit]
                        animate=yes
                        attacks_left=0
                        moves=0
                    [/unit]
                [/then]
            [/if]
        {NEXT i_temp}

        {CLEAR_VARIABLE dead_whirlwind,units}
    [/event]

    # Event for the Fire Soul ability

    # event that creates a "fire soul has worked" variable
    # and sets it to "yes" if the attacker hits at least once.
    # In this campaign, only Valerya has this ability
    [event]
        name=attacker_hits
        first_time_only=no
        [filter_attack]
            type=fire
        [/filter_attack]
        [filter_second]
            id=Valerya
            [or]
                type=Agniraksha
            [/or]
            [or]
                type=Queen in the Air
            [/or]
        [/filter_second]
        [heal_unit]
            [filter]
                id=Valerya
            [/filter]
            animate=yes
            amount=$weapon.damage
        [/heal_unit]
    [/event]

    # Event for Beam weapon special

    [event]
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=beam
        [/filter_attack]
        {INCORPORATE_EFFECTS} #If you haven't defined this, remove it and replace $damage used later with $weapon.damage
        {VARIABLE has_poison no}
        {VARIABLE has_slow no}
        [if]
            [variable]
                name=weapon.specials.poison.id
                equals=poison
            [/variable]
            [then]
                {VARIABLE has_poison yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=weapon.specials.slow.id
                equals=slow
            [/variable]
            [then]
                {VARIABLE has_slow yes}
            [/then]
        [/if]

        [store_locations]
            [filter_adjacent_location]
                x,y=$x2,$y2
                adjacent=-$unit.facing
            [/filter_adjacent_location]

            variable=beam_target_hex
        [/store_locations]
        [harm_unit]
            [filter]
                x,y=$beam_target_hex.x,$beam_target_hex.y
                [filter_side]
                    [enemy_of]
                        side=$unit.side
                    [/enemy_of]
                [/filter_side]
            [/filter]
            amount="$($damage/2)"
            damage_type=arcane
            fire_event=yes
            experience=no
            animate=no
            poisoned=$has_poison
            slowed=$has_slow
        [/harm_unit]
        [store_locations]
            [filter_adjacent_location]
                x,y=$beam_target_hex.x,$beam_target_hex.y
                adjacent=-$unit.facing
            [/filter_adjacent_location]

            variable=beam_target_hex_second
        [/store_locations]
        [harm_unit]
            [filter]
                x,y=$beam_target_hex_second.x,$beam_target_hex_second.y
                [filter_side]
                    [enemy_of]
                        side=$unit.side
                    [/enemy_of]
                [/filter_side]
            [/filter]
            amount="$($damage/4)"
            damage_type=arcane
            fire_event=yes
            experience=no
            animate=no
            poisoned=$has_poison
            slowed=$has_slow
        [/harm_unit]
        {CLEAR_VARIABLE beam_target_hex,beam_target_hex_second,has_slow,has_poison,damage}
    [/event]

    # Event for Devastation weapon special

    [event]
        name=attacker_hits
        first_time_only=no
        [filter_attack]
            special=devastation
        [/filter_attack]
        {VARIABLE has_drain 0}      # Notifies the weapon specials
        {VARIABLE has_slow no}
        {VARIABLE has_poison no}
        {FOREACH weapon.specials.damage i}
            [if]
                [variable]
                    name=weapon.specials.drains.id
                    equals=drains
                [/variable]
                [then]
                    {VARIABLE has_drain 1}
                [/then]
            [/if]
        {NEXT i}
        [if]
            [variable]
                name=weapon.specials.poison.id
                equals=poison
            [/variable]
            [then]
                {VARIABLE has_poison yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=weapon.specials.slow.id
                equals=slow
            [/variable]
            [then]
                {VARIABLE has_slow yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=has_drain
                equals=0
            [/variable]
            [else]
                [store_unit]      #We need to know how many units were drained, and what were their resistances
                    [filter]
                        [filter_adjacent]
                            x,y=$x1,$y1
                        [/filter_adjacent]
                        [not]
                            side=$unit.side              #If you want to use it in an era, use side=$unit.side instead
                        [/not]
                        [not]         #The target unit is already hit by the attack
                            x,y=$x2,$y2
                        [/not]
                        [not]          #Undead are undrainable
                            race=undead
                        [/not]
                    [/filter]
                    variable=units
                [/store_unit]
                {VARIABLE healed_amount 0}
                {FOREACH units i}
                    [switch]            #Check the resistances
                        variable=weapon.type
                        [case]
                            value=arcane
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.arcane*$weapon.damage)"}
                        [/case]
                        [case]
                            value=fire
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.fire*$weapon.damage)"}
                        [/case]
                        [case]
                            value=cold
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.cold*$weapon.damage)"}
                        [/case]
                        [case]
                            value=blade
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.blade*$weapon.damage)"}
                        [/case]
                        [case]
                            value=pierce
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.pierce*$weapon.damage)"}
                        [/case]
                        [case]
                            value=impact
                            {VARIABLE_OP healed_amount add "$($units[$i].resistance.impact*$weapon.damage)"}
                        [/case]
                    [/switch]
                {NEXT i}
                [store_unit]        #Float the healed amount over the unit, like if it had drained
                    [filter]    #Two numbers will float, the one from the regular hit and one from this
                        x,y=$x1,$y1
                    [/filter]
                    kill=no
                    variable=FLOATING_TEXT_temp
                [/store_unit]
                [unstore_unit]
                    variable=FLOATING_TEXT_temp
                    find_vacant=no
                    red,green,blue=0,255,0
                    text=$($healed_amount/200)         #Operating with huge numbers because rounding is a problem
                [/unstore_unit]
                {CLEAR_VARIABLE FLOATING_TEXT_temp}
                [heal_unit]
                    [filter]
                        x,y=$x1,&y1
                    [/filter]
                    amount=$($healed_amount/200)
                    animate=no
                [/heal_unit]
                {CLEAR_VARIABLE units}
                {CLEAR_VARIABLE healed_amount}
            [/else]
        [/if]
        [harm_unit]
            [filter]
                [filter_location] #There is no suitable alternative for 2-range-adjacent, you'll have to use filter terrain
                    x,y=$x1,$y1
                    radius=2
                    [filter_radius] # Don't penetrate through walls
                        terrain=!,X*,X*^*,*^X*
                    [/filter_radius]
                [/filter_location]
                [filter_side] #This is better than the filter to check sides used before
                    [enemy_of]
                        side=$unit.side
                    [/enemy_of]
                [/filter_side]
                [not]
                    x,y=$x2,$y2
                [/not]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=$weapon.damage
            damage_type=$weapon.type
            fire_event=yes
            experience=no
            poisoned=$has_poison   #We have detected these two effects before
            slowed=$has_slow
        [/harm_unit]
        {CLEAR_VARIABLE has_slow}
        {CLEAR_VARIABLE has_poison}
        {CLEAR_VARIABLE has_drain}
    [/event]

    # Event for the Magic Resistance ability

    # event that creates a "magic resistance has worked" variable
    # and sets it to "yes" if the attacker hits at least once.
    # In this campaign, only Galdra in Avatar Form has this ability
    [event]
        name=attacker_hits
        first_time_only=no
        [filter_attack]
            weapon_special=magical
        [/filter_attack]
        [filter_second]
            id=Valerya
        [/filter_second]
        [heal_unit]
            [filter]
                type=Galdra_Avatar
            [/filter]
            animate=yes
            amount=$weapon.damage
        [/heal_unit]
    [/event]

    # Event for the Divine Essence ability; in this campaign, only Galdra and Svarballi have it.

    [event]
        name=last breath
        first_time_only=no
        [filter]
            type=Galdra_Avatar
            [or]
                type=Sky Dragon
            [/or]
        [/filter]
        [filter_second_attack]
            [not]
                name=ryujin_tensho
            [/not]
            [not]
                name=ryushino
            [/not]
            [not]
                name=akashia_sword
            [/not]
        [/filter_second_attack]

        {VARIABLE unit.hitpoints 1}

        # Deduct the killing XP from the attacker, otherwise it is possible
        # for them to advance very quickly from L1 to their maximum advancement.
        # Things get even messier once the full health AMLA effect kicks in.

        {VARIABLE_MIN second_unit.experience "$(max([4, 8 * $unit.level]))"}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]

        [unstore_unit]
            variable=second_unit
            find_vacant=no
        [/unstore_unit]
    [/event]

    ############################################################################ SHIELDWALL ###################################################

    [event]
        id=ability_shieldwall_event
        name=unit placed
        first_time_only=no

        [filter]
            side=1

            [not]
                [filter_wml]
                    [attack]
                        [specials]
                            [chance_to_hit]
                                id=shieldwall_enemy_1
                            [/chance_to_hit]
                        [/specials]
                    [/attack]
                [/filter_wml]
            [/not]
        [/filter]

        [object]
            silent=yes

            [filter]
                id=$unit.id
            [/filter]

            [effect]
                apply_to=attack

                [set_specials]
                    mode=append

                    [chance_to_hit]
                        id=shieldwall_enemy_1
                        name=""
                        description=""
                        sub=10
                        [filter_base_value]
                            greater_than_equal_to=40
                        [/filter_base_value]
                        [filter_opponent]
                            ability=shieldwall

                            [filter_adjacent]
                                ability=shieldwall
                                is_enemy=no
                                count=1-5
                            [/filter_adjacent]
                        [/filter_opponent]
                    [/chance_to_hit]
                    [chance_to_hit]
                        id=shieldwall_enemy_2
                        name=""
                        description=""
                        sub=10
                        [filter_base_value]
                            greater_than_equal_to=50
                        [/filter_base_value]
                        [filter_opponent]
                            ability=shieldwall

                            [filter_adjacent]
                                ability=shieldwall
                                is_enemy=no
                                count=2-5
                            [/filter_adjacent]
                        [/filter_opponent]
                    [/chance_to_hit]
                    [chance_to_hit]
                        id=shieldwall_enemy_3
                        name=""
                        description=""
                        sub=10
                        [filter_base_value]
                            greater_than_equal_to=60
                        [/filter_base_value]
                        [filter_opponent]
                            ability=shieldwall

                            [filter_adjacent]
                                ability=shieldwall
                                is_enemy=no
                                count=3-5
                            [/filter_adjacent]
                        [/filter_opponent]
                    [/chance_to_hit]
                    [chance_to_hit]
                        id=shieldwall_enemy_4
                        name=""
                        description=""
                        sub=10
                        [filter_base_value]
                            greater_than_equal_to=70
                        [/filter_base_value]
                        [filter_opponent]
                            ability=shieldwall

                            [filter_adjacent]
                                ability=shieldwall
                                is_enemy=no
                                count=4-5
                            [/filter_adjacent]
                        [/filter_opponent]
                    [/chance_to_hit]
                    [chance_to_hit]
                        id=shieldwall_enemy_5
                        name=""
                        description=""
                        sub=10
                        [filter_base_value]
                            greater_than_equal_to=80
                        [/filter_base_value]
                        [filter_opponent]
                            ability=shieldwall

                            [filter_adjacent]
                                ability=shieldwall
                                is_enemy=no
                                count=5
                            [/filter_adjacent]
                        [/filter_opponent]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
        [/object]
    [/event]

    ############################################################################# DAZE #################################################################

    [event]
        id=weapon_special_daze_event_1
        name=unit placed
        first_time_only=no

        [filter]
            [not]
                [has_attack]
                    special=enemy_dazed
                [/has_attack]
            [/not]
        [/filter]

        [object]
            silent=yes

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=attack
                [not]
                    special=magical
                [/not]
                [not]
                    special=marksman
                [/not]
                [not]
                    special=enemy_dazed
                [/not]

                [set_specials]
                    mode=append

                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special=marksman
                [and]
                    special=poison
                [/and]
                [not]
                    special=enemy_dazed
                [/not]

                # Note: instead of simply appending, we have to use replace and
                # put marksman last because the +10% from daze must be applied
                # first; the other way around, the base value would already be
                # potentially modified by marksman
                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=60
                        [/filter_base_value]
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    {WEAPON_SPECIAL_POISON}
                    [chance_to_hit]
                        id=enemy_dazed_marksman_defense
                        name=""
                        description=""
                        add=10
                        active_on=defense
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special=marksman
                [not]
                    special=poison
                [/not]
                [not]
                    special=enemy_dazed
                [/not]

                # Note: instead of simply appending, we have to use replace and
                # put marksman last because the +10% from daze must be applied
                # first; the other way around, the base value would already be
                # potentially modified by marksman
                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=60
                        [/filter_base_value]
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    [chance_to_hit]
                        id=enemy_dazed_marksman_defense
                        name=""
                        description=""
                        add=10
                        active_on=defense
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
        [/object]
    [/event]

    [event]
        id=weapon_special_daze_event_2
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=daze
        [/filter_attack]

        [filter_second]
            [not]
                [filter_wml]
                    [status]
                        dazed=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.dazed yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text= _ "dazed"
            female_text = _ "female^dazed"
            red,green,blue=196,196,128
        [/unstore_unit]

        [object]
            silent=yes

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=attack
                [not]
                    special=magical
                [/not]
                [not]
                    special=marksman
                [/not]
                [not]
                    special=self_dazed
                [/not]

                [set_specials]
                    mode=append

                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special=marksman
                [and]
                    special=poison
                [/and]
                [not]
                    special=self_dazed
                [/not]

                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=70
                        [/filter_base_value]
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    {WEAPON_SPECIAL_POISON}
                    [chance_to_hit]
                        id=self_dazed_marksman_defense
                        name=""
                        description=""
                        sub=10
                        active_on=defense
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special=marksman
                [not]
                    special=poison
                [/not]
                [not]
                    special=self_dazed
                [/not]

                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=70
                        [/filter_base_value]
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    [chance_to_hit]
                        id=self_dazed_marksman_defense
                        name=""
                        description=""
                        sub=10
                        active_on=defense
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
        [/object]
    [/event]

    [event]
        id=weapon_special_daze_event_3
        name=side turn
        first_time_only=no

        [event]
            name=side turn
            delayed_variable_substitution=no

            #{DEBUG_MSG "side $|side_number turn started, clearing daze from side $side_number units"}

            [modify_unit]
                [filter]
                    side=$side_number
                    [filter_wml]
                        [status]
                            dazed=yes
                        [/status]
                    [/filter_wml]
                [/filter]

                [status]
                    dazed=no
                [/status]
            [/modify_unit]
        [/event]
    [/event]

    ########################################################################### DISENGAGE #################################################################
    [event]
        name=attack end
        first_time_only=no

        [filter]
            ability=disengage

            [not]
                [filter_wml]
                    moves=$this_unit.max_moves
                [/filter_wml]
            [/not]
        [/filter]

        {VARIABLE unit.moves 0}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef

# Event for the Fire Soul ability

# event that creates a "fire soul has worked" variable
# and sets it to "yes" if the attacker hits at least once.
# In this campaign, only Valerya has this ability
[event]
    name=attacker_hits
    first_time_only=no
    [filter_attack]
        type=fire
    [/filter_attack]
    [filter_second]
        id=Valerya
        [or]
            type=Agniraksha
        [/or]
        [or]
            type=Queen in the Air
        [/or]
    [/filter_second]
    [heal_unit]
        [filter]
            id=Valerya
        [/filter]
        animate=yes
        amount=$weapon.damage
    [/heal_unit]
[/event]
